# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: kitchen
  - model: lsq_bet
  - callbacks: lsq_bet
  - logger: wandb # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - trainer: default
  - paths: default
  - extras: default
  - hydra: default
  # - pretrain/model: cnn_at
  # - pretrain: for_train


  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null


# task name, determines output directory path
task_name: "train_lsq_bet"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: ["dev"]

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: false

# simply provide checkpoint path to resume training
ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: 437
max_epochs: 1000
batch_size: 2048

data_spec:
  horizon: 10

pretrain_at_ckp: "pretrain/logs/kitchen/action_tokenizer/pretrain_at/runs/2024-05-11_20-44-01/checkpoints/epoch_290.ckpt"
pretrain_st_ckp: "pretrain/logs/kitchen/state_tokenizer/pretrain_st/runs/2024-05-12_00-23-31/checkpoints/last.ckpt"

env:
  gym:
    _target_: gym.make
    id: kitchen-v0
  obs_dim: 60
  act_dim: 9
  goal_dim: 60

model_spec:
  model_type: "lsq_bet"

window_size: 10
goal_window_size: 10
eval_window_size: 10
eval_freq: 10
eval_on_env_freq: 25
num_env_evals: 5
num_final_evals: 20
num_final_eval_per_goal: 5
action_window_size: 10